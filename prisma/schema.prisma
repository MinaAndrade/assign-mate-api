generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  professores Professor[]
  alunos      Aluno[]
  cursos      Curso[]
  Disciplina  Disciplina[]

  Turma Turma[]
}

model Professor {
  id            Int      @id @default(autoincrement())
  matricula     String   @unique
  nomeCompleto  String
  dataNascimento DateTime
  especialidade  String
  email         String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  adminId       Int
  admin         Admin    @relation(fields: [adminId], references: [id])
}

model Aluno {
  id            String   @id @default(uuid())
  matricula     String   @unique
  nomeCompleto  String
  dataNascimento DateTime
  curso         String
  email         String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  adminId       Int
  admin         Admin    @relation(fields: [adminId], references: [id])
}

model Curso {
  id            Int      @id @default(autoincrement())
  codigo        String   @unique
  nome          String
  descricao     String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  adminId       Int
  admin         Admin    @relation(fields: [adminId], references: [id])
  Disciplina    Disciplina[]

  Turma Turma[]
}

model Disciplina {
  id            Int      @id @default(autoincrement())
  codigo        String   @unique
  nome          String
  descricao     String?
  cargaHoraria  Int
  periodo       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  cursoId       Int
  curso         Curso    @relation(fields: [cursoId], references: [id])
  adminId       Int
  admin         Admin    @relation(fields: [adminId], references: [id])
}

enum Turno {
  MANHA
  TARDE
  NOITE
}

enum Modalidade {
  PRESENCIAL
  EAD
  SEMI_PRESENCIAL
}

model Turma {
  id            Int        @id @default(autoincrement())
  codigo        String     @unique
  semestre      String
  nome          String
  turno         Turno
  modalidade    Modalidade
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  cursoId       Int
  curso         Curso      @relation(fields: [cursoId], references: [id])
  adminId       Int
  admin         Admin      @relation(fields: [adminId], references: [id])
}